{{ 'google-maps.css' | asset_url | stylesheet_tag }}

<div class="google-maps">
  {% section 'banner-slideshow' %}
  {% section 'google-maps' %}
</div>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCA2-CZ2tXlJS7J-vFtsOmTnBButfTLgBg&callback=myMap&libraries=places" defer></script>
<script>

  let items = [], rvItems = [] , rv_markers = [] , markers = [], infos = [];
  let map = null;
  let searchBox = null;
  let myPos = null;
  let mapProp = null;

  const url = 'https://np.nomadinternet.com';
  const key = 'AIzaSyCA2-CZ2tXlJS7J-vFtsOmTnBButfTLgBg';
  const loadingBg = document.querySelector('[js-loading-bg]');

  window.addEventListener('DOMContentLoaded', function() {
    getPos();
    myMap();
  });

  function mapButtonEvents() {
    markers.forEach(marker => {
      marker.addListener('click', (e) => {
        items.forEach(item => {
          if (item.title == marker.title) {
            showInformation(item)
          }
        });
      });
    });

    map.addListener('click', (e) => {
      infos.forEach(info => {
        info.window.close();
      });
    });

    const input = document.getElementById("pac-input");
    searchBox = new google.maps.places.SearchBox(input);

    searchBox.addListener("places_changed", (e) => {
      eventPlaces(searchBox);
    });

    const cursorInput = document.querySelector('.cursor-icon');
    if (cursorInput) {
      cursorInput.addEventListener('click', (e) => {
        e.preventDefault();
        getMyPosition();
      });
    }
  }

  function navigateClick(content) {
    items.forEach(item => {
      if (item.title == content) {
        const lat = parseFloat(item.latlng[0]);
        const lng = parseFloat(item.latlng[1]);

        const pos = {
          lat: lat,
          lng: lng
        }
        const url = `http://maps.google.com/?ie=UTF8&hq=&ll=${pos.lat},${pos.lng}&z=13`;
        window.open(url, '_blank');

      }
    });
  }

  function showInformation(item) {
    const lat = parseFloat(item.latlng[0]);
    const lng = parseFloat(item.latlng[1]);

    map.setCenter({
      lat: lat,
      lng: lng
    })
    map.setZoom(10);

    infos.forEach(info => {
      if (info.title == item.title) {
        info.window.open(info.marker.getMap(), info.marker);
      }
    });
  }

  function smoothZoom (map, max, cnt) {
    if (cnt >= max) {
        return;
    }
    else {
        z = google.maps.event.addListener(map, 'zoom_changed', function(event){
            google.maps.event.removeListener(z);
            smoothZoom(map, max, cnt + 1);
        });
        setTimeout(function(){map.setZoom(cnt)}, 80); // 80ms is what I found to work well on my system -- it might not work well on all systems
    }
  }    

  function setCenterPos(item) {
    map.setCenter(new google.maps.LatLng(parseFloat(item.latlng[0]), parseFloat(item.latlng[1])));
    map.setZoom(15);
  }

  function getAddressByLatLng(item, marker) {
    if (!item) return;
    const lat = item.latlng[0];
    const lng = item.latlng[1];

    let footerContent = {
      icon : `${url}${item.icon}`,
      address: '',
      title: item.title,
      content: item.content,
      sub_title: item.content,
      geolocation: {
        lat: parseFloat(lat),
        lng: parseFloat(lng)
      }
    }

    renderMarkerContent(footerContent, marker);
  }

  function renderMarkerContent(content, marker) {
    const html = `
      <div class="google-maps__information">
        <h3 class="sub-heading">
          <svg width="13" height="12" viewBox="0 0 13 12" fill="none" xmlns="http://www.w3.org/2000/svg">
            <rect x="0.423828" y="0.283203" width="11.6005" height="11.6005" rx="2.32011" fill="#00A77F"/>
          </svg>

          ${content.title}
        </h3>
        <div class="wrapper">
          <img src="https://cdn.shopify.com/s/files/1/0103/2847/3658/files/Center_view_2.svg?v=1702665313" title="${content.title}"/>
      
          <div class="content">
            <div class="content-header">${content.content}</div>
            <div class="buttons" js-buttons >
              <button class="btn" onclick="navigateClick('${content.title}')">
                navigate 
                <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <g clip-path="url(#clip0_8503_33543)">
                  <path d="M2.57186 7.93618C2.17496 7.78183 1.97651 7.70466 1.91858 7.59345C1.86835 7.49706 1.86828 7.38222 1.9184 7.28576C1.9762 7.17449 2.17456 7.09709 2.57128 6.94227L13.8298 2.54871C14.1879 2.40896 14.367 2.33908 14.4814 2.3773C14.5807 2.4105 14.6587 2.48848 14.6919 2.58784C14.7301 2.70226 14.6603 2.88132 14.5205 3.23944L10.1269 14.4979C9.97213 14.8947 9.89472 15.093 9.78345 15.1508C9.68699 15.2009 9.57216 15.2009 9.47576 15.1506C9.36456 15.0927 9.28738 14.8943 9.13303 14.4974L7.38096 9.99202C7.34963 9.91145 7.33396 9.87117 7.30977 9.83725C7.28832 9.80718 7.26203 9.78089 7.23196 9.75945C7.19804 9.73525 7.15776 9.71959 7.0772 9.68825L2.57186 7.93618Z" stroke="#00A77F" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  </g>
                  <defs>
                  <clipPath id="clip0_8503_33543">
                  <rect width="16" height="16" fill="white" transform="translate(0.296875 0.773193)"/>
                  </clipPath>
                  </defs>
                </svg>
              </button>
            </div>
          </div>
        </div>
      </div>
    `;

    const infoWindow = new google.maps.InfoWindow();
    infoWindow.setContent(`${html}`);
    infos.push({
      title: content.title,
      window: infoWindow,
      marker: marker
    });
  }

  function moveToMaps() {
    const mapContainer = document.querySelector('.google-maps__container');
    if (mapContainer) {
      window.scrollTo({
        top: mapContainer.getBoundingClientRect().top,
        behavior: 'smooth'
      })
    }
  }

  function getPos() {
    fetch('https://np.nomadinternet.com/map-poi-smarthub.php?json=1').then(res => res.json()).then(response => {
      const keys = Object.keys(response);
      keys.forEach(key => {
        items.push(response[key]);
      });
    });

    // fetch('https://np.nomadinternet.com/map-poi-smarthub.php?json=1&group=cgva').then(res => res.json()).then(response => {
    //   const rvKeys = Object.keys(response);

    //   rvKeys.forEach(key => {
    //     rvItems.push(response[key]);
    //   });
    // });

    setTimeout(() => {
      renderMapEvent();
    }, 2000);
  }

  function myMap() {
    mapProp= {
      center:new google.maps.LatLng(40.212440718286466, -96.15234375),
      zoom: 5
    }
    map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
  }

  function getMyPosition() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
      (position) => {
        const pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude,
        };

        map.setCenter(pos);
      
        if (myPos == null) {
          myPos = new google.maps.Marker({
            position: pos,
            map,
          });
        }
      },
      () => {
      },);
    }
  }

  function renderMapEvent() {
    setMarker();
    //setRvMarker();
    mapButtonEvents();
  }

  function eventPlaces (searchBox) {
    const places = searchBox.getPlaces();
    if (places.length == 0) {
      return;
    }

    places.forEach((place) => {
      if (!place.geometry || !place.geometry.location) {
        console.log("Returned place contains no geometry");
        return;
      }

      map.setCenter(place.geometry.location);
    });
  }

  function setRvMarker() {
    console.log('rvMarker = ', rvItems);
    rvItems.forEach(content => {
      const pos = {
        lat: parseFloat(content.latlng[0]),
        lng: parseFloat(content.latlng[1])
      }

      const rvMarker = new google.maps.Marker({
        map: map,
        position: pos
      });
      rv_markers.push(rvMarker);
    });
  }

  function setMarker() {
    items.forEach(item => {
      const pos = {
        lat: parseFloat(item.latlng[0]),
        lng: parseFloat(item.latlng[1])
      }

      const image = {
        url: 'https://cdn.shopify.com/s/files/1/0103/2847/3658/files/Group_469482_1.svg?v=1703014235',
        scaledSize : new google.maps.Size(61, 75),
      };

      const marker = new google.maps.Marker({
        position: pos,
        map: map,
        icon: image,
        title: item.title,
        labelOrigin: new google.maps.Point(9, 15),
        label: { className: 'marker-label',color: '#fff', fontWeight: 'bold', fontSize: '15px', text: item.title }
      });
      markers.push(marker);
      getAddressByLatLng(item,marker);
    });
  }

</script>