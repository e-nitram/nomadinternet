$breakpoints: (
  xs: 0,
  sm: 36rem,
  md: 48rem,
  lg: 62rem,
  xl: 75rem,
  xxl: 87.5rem,
);

// Desktop first

@mixin sm-u {
  @media (min-width: map-get($breakpoints, sm)) {
    @content;
  }
}

@mixin md-u {
  @media (min-width: map-get($breakpoints, md)) {
    @content;
  }
}

@mixin lg-u {
  @media (min-width: map-get($breakpoints, lg)) {
    @content;
  }
}

@mixin xl-u {
  @media (min-width: map-get($breakpoints, xl)) {
    @content;
  }
}

// Only

@mixin xs {
  @media (max-width: (map-get($breakpoints, sm) - 0.013rem)) {
    @content;
  }
}

@mixin sm {
  @media (max-width: (map-get($breakpoints, md) - 0.013rem)) and (min-width: map-get($breakpoints, sm)) {
    @content;
  }
}

@mixin md {
  @media (max-width: (map-get($breakpoints, lg) - 0.013rem)) and (min-width: map-get($breakpoints, md)) {
    @content;
  }
}

@mixin lg {
  @media (max-width: (map-get($breakpoints, xl) - 0.013rem)) and (min-width: map-get($breakpoints, lg)) {
    @content;
  }
}

@mixin xl {
  @media (max-width: (map-get($breakpoints, xxl) - 0.013rem)) and (min-width: map-get($breakpoints, xl)) {
    @content;
  }
}

@mixin xxl {
  @media (min-width: map-get($breakpoints, xxl)) {
    @content;
  }
}

// Mobile first
@mixin xl-d {
  @media (max-width: (map-get($breakpoints, xxl) - 0.013rem)) {
    @content;
  }
}

@mixin lg-d {
  @media (max-width: (map-get($breakpoints, xl) - 0.013rem)) {
    @content;
  }
}

@mixin md-d {
  @media (max-width: (map-get($breakpoints, lg) - 0.013rem)) {
    @content;
  }
}

@mixin sm-d {
  @media (max-width: (map-get($breakpoints, md) - 0.013rem)) {
    @content;
  }
}
